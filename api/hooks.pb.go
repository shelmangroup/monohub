// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hooks.proto

package monohub

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PreReceiveRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreReceiveRequest) Reset()         { *m = PreReceiveRequest{} }
func (m *PreReceiveRequest) String() string { return proto.CompactTextString(m) }
func (*PreReceiveRequest) ProtoMessage()    {}
func (*PreReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hooks_36b4850d00c84136, []int{0}
}
func (m *PreReceiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreReceiveRequest.Unmarshal(m, b)
}
func (m *PreReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreReceiveRequest.Marshal(b, m, deterministic)
}
func (dst *PreReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreReceiveRequest.Merge(dst, src)
}
func (m *PreReceiveRequest) XXX_Size() int {
	return xxx_messageInfo_PreReceiveRequest.Size(m)
}
func (m *PreReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PreReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PreReceiveRequest proto.InternalMessageInfo

type PreReceiveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreReceiveReply) Reset()         { *m = PreReceiveReply{} }
func (m *PreReceiveReply) String() string { return proto.CompactTextString(m) }
func (*PreReceiveReply) ProtoMessage()    {}
func (*PreReceiveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_hooks_36b4850d00c84136, []int{1}
}
func (m *PreReceiveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreReceiveReply.Unmarshal(m, b)
}
func (m *PreReceiveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreReceiveReply.Marshal(b, m, deterministic)
}
func (dst *PreReceiveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreReceiveReply.Merge(dst, src)
}
func (m *PreReceiveReply) XXX_Size() int {
	return xxx_messageInfo_PreReceiveReply.Size(m)
}
func (m *PreReceiveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PreReceiveReply.DiscardUnknown(m)
}

var xxx_messageInfo_PreReceiveReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PreReceiveRequest)(nil), "monohub.PreReceiveRequest")
	proto.RegisterType((*PreReceiveReply)(nil), "monohub.PreReceiveReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GitHooksClient is the client API for GitHooks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GitHooksClient interface {
	PreReceive(ctx context.Context, in *PreReceiveRequest, opts ...grpc.CallOption) (*PreReceiveReply, error)
}

type gitHooksClient struct {
	cc *grpc.ClientConn
}

func NewGitHooksClient(cc *grpc.ClientConn) GitHooksClient {
	return &gitHooksClient{cc}
}

func (c *gitHooksClient) PreReceive(ctx context.Context, in *PreReceiveRequest, opts ...grpc.CallOption) (*PreReceiveReply, error) {
	out := new(PreReceiveReply)
	err := c.cc.Invoke(ctx, "/monohub.GitHooks/PreReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GitHooksServer is the server API for GitHooks service.
type GitHooksServer interface {
	PreReceive(context.Context, *PreReceiveRequest) (*PreReceiveReply, error)
}

func RegisterGitHooksServer(s *grpc.Server, srv GitHooksServer) {
	s.RegisterService(&_GitHooks_serviceDesc, srv)
}

func _GitHooks_PreReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreReceiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GitHooksServer).PreReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monohub.GitHooks/PreReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GitHooksServer).PreReceive(ctx, req.(*PreReceiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GitHooks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monohub.GitHooks",
	HandlerType: (*GitHooksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PreReceive",
			Handler:    _GitHooks_PreReceive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hooks.proto",
}

func init() { proto.RegisterFile("hooks.proto", fileDescriptor_hooks_36b4850d00c84136) }

var fileDescriptor_hooks_36b4850d00c84136 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc8, 0xcf, 0xcf,
	0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0xcd, 0xcf, 0xcb, 0xcf, 0x28, 0x4d,
	0x92, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb,
	0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x83, 0x2a, 0x53, 0x12, 0xe6, 0x12, 0x0c, 0x28, 0x4a,
	0x0d, 0x4a, 0x4d, 0x4e, 0xcd, 0x2c, 0x4b, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x12,
	0xe4, 0xe2, 0x47, 0x16, 0x2c, 0xc8, 0xa9, 0x34, 0x0a, 0xe0, 0xe2, 0x70, 0xcf, 0x2c, 0xf1, 0x00,
	0x59, 0x20, 0xe4, 0xc2, 0xc5, 0x85, 0x90, 0x16, 0x92, 0xd2, 0x83, 0xda, 0xa4, 0x87, 0x61, 0x90,
	0x94, 0x04, 0x56, 0xb9, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x03, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x3d, 0x2b, 0xf0, 0x05, 0xb6, 0x00, 0x00, 0x00,
}
