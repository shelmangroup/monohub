// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tree.proto

package monohub

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TreeRequest struct {
	Sha                  string   `protobuf:"bytes,1,opt,name=sha" json:"sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TreeRequest) Reset()         { *m = TreeRequest{} }
func (m *TreeRequest) String() string { return proto.CompactTextString(m) }
func (*TreeRequest) ProtoMessage()    {}
func (*TreeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tree_5d8c58ff791eee28, []int{0}
}
func (m *TreeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeRequest.Unmarshal(m, b)
}
func (m *TreeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeRequest.Marshal(b, m, deterministic)
}
func (dst *TreeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeRequest.Merge(dst, src)
}
func (m *TreeRequest) XXX_Size() int {
	return xxx_messageInfo_TreeRequest.Size(m)
}
func (m *TreeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TreeRequest proto.InternalMessageInfo

func (m *TreeRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

type TreeFile struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Mode                 string   `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Size                 int64    `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Sha                  string   `protobuf:"bytes,5,opt,name=sha" json:"sha,omitempty"`
	Url                  string   `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TreeFile) Reset()         { *m = TreeFile{} }
func (m *TreeFile) String() string { return proto.CompactTextString(m) }
func (*TreeFile) ProtoMessage()    {}
func (*TreeFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_tree_5d8c58ff791eee28, []int{1}
}
func (m *TreeFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeFile.Unmarshal(m, b)
}
func (m *TreeFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeFile.Marshal(b, m, deterministic)
}
func (dst *TreeFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeFile.Merge(dst, src)
}
func (m *TreeFile) XXX_Size() int {
	return xxx_messageInfo_TreeFile.Size(m)
}
func (m *TreeFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeFile.DiscardUnknown(m)
}

var xxx_messageInfo_TreeFile proto.InternalMessageInfo

func (m *TreeFile) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *TreeFile) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *TreeFile) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TreeFile) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *TreeFile) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *TreeFile) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type TreeResponse struct {
	Sha                  string      `protobuf:"bytes,1,opt,name=sha" json:"sha,omitempty"`
	Tree                 []*TreeFile `protobuf:"bytes,2,rep,name=tree" json:"tree,omitempty"`
	Truncated            bool        `protobuf:"varint,3,opt,name=truncated" json:"truncated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TreeResponse) Reset()         { *m = TreeResponse{} }
func (m *TreeResponse) String() string { return proto.CompactTextString(m) }
func (*TreeResponse) ProtoMessage()    {}
func (*TreeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tree_5d8c58ff791eee28, []int{2}
}
func (m *TreeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeResponse.Unmarshal(m, b)
}
func (m *TreeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeResponse.Marshal(b, m, deterministic)
}
func (dst *TreeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeResponse.Merge(dst, src)
}
func (m *TreeResponse) XXX_Size() int {
	return xxx_messageInfo_TreeResponse.Size(m)
}
func (m *TreeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TreeResponse proto.InternalMessageInfo

func (m *TreeResponse) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *TreeResponse) GetTree() []*TreeFile {
	if m != nil {
		return m.Tree
	}
	return nil
}

func (m *TreeResponse) GetTruncated() bool {
	if m != nil {
		return m.Truncated
	}
	return false
}

func init() {
	proto.RegisterType((*TreeRequest)(nil), "monohub.TreeRequest")
	proto.RegisterType((*TreeFile)(nil), "monohub.TreeFile")
	proto.RegisterType((*TreeResponse)(nil), "monohub.TreeResponse")
}

func init() { proto.RegisterFile("tree.proto", fileDescriptor_tree_5d8c58ff791eee28) }

var fileDescriptor_tree_5d8c58ff791eee28 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcd, 0x6a, 0x84, 0x30,
	0x10, 0x80, 0xd1, 0x58, 0xab, 0x63, 0x0f, 0x6d, 0x4e, 0x39, 0x14, 0x2a, 0x42, 0xc1, 0x93, 0x87,
	0xf6, 0x1d, 0xfa, 0x00, 0xa1, 0x2f, 0xa0, 0x75, 0x40, 0x41, 0x4d, 0x9a, 0x9f, 0xc3, 0xee, 0x61,
	0x9f, 0x7d, 0x99, 0x44, 0x77, 0x0f, 0x7b, 0xfb, 0xf8, 0x26, 0x30, 0xdf, 0x04, 0xc0, 0x19, 0xc4,
	0x4e, 0x1b, 0xe5, 0x14, 0x7f, 0x5e, 0xd5, 0xa6, 0x26, 0x3f, 0x34, 0x1f, 0x50, 0xfd, 0x1a, 0x44,
	0x89, 0xff, 0x1e, 0xad, 0xe3, 0xaf, 0xc0, 0xec, 0xd4, 0x8b, 0xa4, 0x4e, 0xda, 0x52, 0x12, 0x36,
	0x17, 0x28, 0xe8, 0xc1, 0xcf, 0xbc, 0x20, 0xe7, 0x90, 0xe9, 0xde, 0x4d, 0xfb, 0x38, 0x30, 0xb9,
	0x55, 0x8d, 0x28, 0xd2, 0xe8, 0x88, 0xc9, 0xb9, 0x93, 0x46, 0xc1, 0xa2, 0x23, 0x26, 0x67, 0xe7,
	0x33, 0x8a, 0xac, 0x4e, 0x5a, 0x26, 0x03, 0x1f, 0xdb, 0x9e, 0x6e, 0xdb, 0xc8, 0x78, 0xb3, 0x88,
	0x3c, 0x1a, 0x6f, 0x96, 0x06, 0xe1, 0x25, 0x06, 0x5a, 0xad, 0x36, 0x8b, 0x8f, 0x85, 0xfc, 0x13,
	0x32, 0xba, 0x4c, 0xa4, 0x35, 0x6b, 0xab, 0xaf, 0xb7, 0x6e, 0x3f, 0xad, 0x3b, 0xb2, 0x65, 0x18,
	0xf3, 0x77, 0x28, 0x9d, 0xf1, 0xdb, 0x5f, 0xef, 0x70, 0x0c, 0x65, 0x85, 0xbc, 0x8b, 0x21, 0x0f,
	0xff, 0xf2, 0x7d, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x83, 0x04, 0xdb, 0x25, 0x01, 0x00, 0x00,
}
